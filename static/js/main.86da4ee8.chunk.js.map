{"version":3,"sources":["App.js","index.js"],"names":["Post","state","cityName","helperText","currentState","low","high","current","imageUrl","weatherState","handleChange","event","setState","target","value","handleSubmit","a","preventDefault","isNaN","url","fetch","response","json","weather","id","iconCode","main","temp_min","temp_max","temp","description","className","this","width","height","src","alt","onSubmit","for","placeholder","onChange","type","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAyIeA,E,4MArIbC,MAAQ,CACNC,SAAU,GACVC,WAAY,GACZC,aAAc,QACdC,IAAK,EACLC,KAAM,EACNC,QAAS,EACTC,SAAU,GACVC,aAAc,I,EAGhBC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEV,SAAUS,EAAME,OAAOC,S,EAGzCC,a,uCAAe,WAAOJ,GAAP,yBAAAK,EAAA,yDACdL,EAAMM,iBAEAC,MAAM,EAAKjB,MAAMC,UAHT,uBAIX,EAAKU,SAAS,CAAER,aAAc,GAAID,WAAY,iDAJnC,iCASb,EAAKS,SAAS,CAAER,aAAc,UAAWD,WAAY,KAE/CgB,EAXO,4DAWoD,EAAKlB,MAAMC,SAX/D,6EAcYkB,MAAMD,GAdlB,cAcLE,EAdK,iBAeQA,EAASC,OAfjB,QAeLA,EAfK,OAuBY,qBAHnBC,EAAUD,EAAKC,QAAQ,IAIzBA,EAAU,KAENA,EAAQC,IAAM,IAChBC,EAAW,MAEJF,EAAQC,IAAM,KAAOD,EAAQC,GAAK,IACzCC,EAAW,MACFF,EAAQC,IAAM,KAAOD,EAAQC,GAAK,IAC3CC,EAAW,MACFF,EAAQC,IAAM,KAAOD,EAAQC,GAAK,IAC3CC,EAAW,MACFF,EAAQC,IAAM,KAAOD,EAAQC,GAAK,IAC3CC,EAAW,MACa,MAAfF,EAAQC,GACjBC,EAAW,MACFF,EAAQC,GAAK,MACtBC,EAAW,OAIf,EAAKb,SAAS,CACZR,aAAc,UACdC,IAAKiB,EAAKI,KAAKC,SACfrB,KAAMgB,EAAKI,KAAKE,SAChBrB,QAASe,EAAKI,KAAKG,KACnBrB,SAAWiB,EAAD,4CAAkDA,EAAlD,WAAsE,GAChFhB,aAAY,UAAEc,SAAF,aAAE,EAASO,cAlDd,kDAsDX,EAAKlB,SAAS,CAAER,aAAc,QAASD,WAAY,+CAtDxC,0D,kGA0Df,WACE,OACE,sBAAK4B,UAAU,MAAf,UACE,wDAE+B,YAA5BC,KAAK/B,MAAMG,cAEV,iDAI2B,YAA5B4B,KAAK/B,MAAMG,cAEV,qCAC4B,KAAxB4B,KAAK/B,MAAMO,UAET,qBAAKuB,UAAU,kBAAf,SACE,qBAAKE,MAAO,IAAKC,OAAQ,IAAKC,IAAKH,KAAK/B,MAAMO,SAAU4B,IAAKJ,KAAK/B,MAAMQ,iBAK9E,oBAAIsB,UAAU,WAAd,SAA0BC,KAAK/B,MAAMC,WACrC,oBAAI6B,UAAU,gBAAd,SAA+BC,KAAK/B,MAAMQ,eAE1C,+BAAKuB,KAAK/B,MAAMM,QAAhB,WAEA,uCAAUyB,KAAK/B,MAAMI,IAArB,WACA,uCAAU2B,KAAK/B,MAAMK,KAArB,cAKyB,YAA5B0B,KAAK/B,MAAMG,cAEV,uBAAM2B,UAAU,iBAAiBM,SAAUL,KAAKjB,aAAhD,UACE,uBAAOuB,IAAI,gBAAgBP,UAAU,sBAArC,2DAIA,gCACE,uBAAOP,GAAG,OAAOe,YAAa,4BAA6BC,SAAUR,KAAKtB,eAE1E,uBAAO+B,KAAK,SAAS3B,MAAM,iBAExBkB,KAAK/B,MAAME,WAAWuC,OAAS,GAE9B,4BACGV,KAAK/B,MAAME,0B,GA1HfwC,IAAMC,WCEzBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86da4ee8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Post extends React.Component {\n  state = {\n    cityName: '',\n    helperText: '',\n    currentState: 'begin',\n    low: 0,\n    high: 0,\n    current: 0,\n    imageUrl: '',\n    weatherState: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({ cityName: event.target.value });\n  }\n\n  handleSubmit = async (event) => {\n   event.preventDefault();\n\n    if (!isNaN(this.state.cityName)) {\n      this.setState({ currentState: '', helperText: 'Cityname can not contain numberic characters' });\n    return;\n\n    }\n\n    this.setState({ currentState: 'loading', helperText: '' });\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.cityName},au&units=metric&appid=30691f1349070120836f0a3cf1158589`;\n\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n\n      // Get the icon\n      let iconCode;\n\n      let weather = json.weather[0];\n\n      // There's a lot more variations based on time of day/severity, but I haven't had enough coffee to deal with that.\n      if (typeof weather === 'undefined') {\n        weather = null;\n      } else {\n        if (weather.id <= 232) {\n          iconCode = \"11d\";\n        }\n        else if (weather.id <= 321 && weather.id > 232) {\n          iconCode = '09d';\n        } else if (weather.id <= 531 && weather.id > 321) {\n          iconCode = '10d';\n        } else if (weather.id <= 622 && weather.id > 531) {\n          iconCode = '13d';\n        } else if (weather.id <= 781 && weather.id > 622) {\n          iconCode = '50d';\n        } else if (weather.id === 800) {\n          iconCode = '01d';\n        } else if (weather.id > 800) {\n          iconCode = '02d';\n        }\n      }\n\n      this.setState({\n        currentState: 'results',\n        low: json.main.temp_min,\n        high: json.main.temp_max,\n        current: json.main.temp,\n        imageUrl: (iconCode) ? `https://openweathermap.org/img/wn/${iconCode}@2x.png` : \"\",\n        weatherState: weather?.description\n      });\n    }\n    catch (ex) {\n      this.setState({ currentState: 'error', helperText: 'Something went wrong while making request!' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Australian Weather App</h1>\n        {\n          (this.state.currentState === 'loading') &&\n          (\n            <p>Fetching data...</p>\n          )\n        }\n        {\n          (this.state.currentState === 'results') &&\n          (\n            <>\n              {(this.state.imageUrl !== '') &&\n                (\n                  <div className=\"image-container\">\n                    <img width={100} height={100} src={this.state.imageUrl} alt={this.state.weatherState} />\n                  </div>\n                )\n              }\n\n              <h4 className=\"cityname\">{this.state.cityName}</h4>\n              <h5 className=\"weather-state\">{this.state.weatherState}</h5>\n\n              <h1>{this.state.current}&#176;C</h1>\n\n              <h3>Min: {this.state.low}&#176;C</h3>\n              <h3>Max: {this.state.high}&#176;C</h3>\n            </>\n          )\n        }\n        {\n          (this.state.currentState !== 'loading') &&\n          (\n            <form className=\"cityName-input\" onSubmit={this.handleSubmit}>\n              <label for=\"cityName-text\" className=\"cityName-text-label\">\n                Enter your cityname to retrieve  the weather:\n              </label>\n\n              <div>\n                <input id=\"Name\" placeholder={\"i.e Melbourne, Sydney etc\"} onChange={this.handleChange} />\n\n                <input type=\"submit\" value=\"Get Weather!\" />\n                {\n                  (this.state.helperText.length > 0) &&\n                  (\n                    <p>\n                      {this.state.helperText}\n                    </p>\n                  )\n                }\n              </div>\n            </form>)\n        }\n      </div>\n    )\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Post from './App';\n\n\nReactDOM.render(\n    <Post/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}